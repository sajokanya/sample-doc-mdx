{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "https://uat-cluster.uksouth.cloudapp.azure.com/modules/limits-module",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/limits/rest/v2/spring/jpa/limitsWorkflowProcessInstanceEntities": {
      "get": {
        "tags": [
          "limits-workflow-process-instance-entity-entity-controller"
        ],
        "description": "get-limitsworkflowprocessinstanceentity",
        "operationId": "getCollectionResource-limitsworkflowprocessinstanceentity-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelLimitsWorkflowProcessInstanceEntity"
                }
              },
              "text/uri-list": {
                "schema": {
                  "type": "string"
                }
              },
              "application/x-spring-data-compact+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelLimitsWorkflowProcessInstanceEntity"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "limits-workflow-process-instance-entity-entity-controller"
        ],
        "description": "create-limitsworkflowprocessinstanceentity",
        "operationId": "postCollectionResource-limitsworkflowprocessinstanceentity-post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitsWorkflowProcessInstanceEntityRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelLimitsWorkflowProcessInstanceEntity"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/spring/jpa/limitsWorkflowProcessInstanceEntities/{id}": {
      "get": {
        "tags": [
          "limits-workflow-process-instance-entity-entity-controller"
        ],
        "description": "get-limitsworkflowprocessinstanceentity",
        "operationId": "getItemResource-limitsworkflowprocessinstanceentity-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelLimitsWorkflowProcessInstanceEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "limits-workflow-process-instance-entity-entity-controller"
        ],
        "description": "update-limitsworkflowprocessinstanceentity",
        "operationId": "putItemResource-limitsworkflowprocessinstanceentity-put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitsWorkflowProcessInstanceEntityRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelLimitsWorkflowProcessInstanceEntity"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelLimitsWorkflowProcessInstanceEntity"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "limits-workflow-process-instance-entity-entity-controller"
        ],
        "description": "delete-limitsworkflowprocessinstanceentity",
        "operationId": "deleteItemResource-limitsworkflowprocessinstanceentity-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "limits-workflow-process-instance-entity-entity-controller"
        ],
        "description": "patch-limitsworkflowprocessinstanceentity",
        "operationId": "patchItemResource-limitsworkflowprocessinstanceentity-patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitsWorkflowProcessInstanceEntityRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelLimitsWorkflowProcessInstanceEntity"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/limits/rest/v2/spring/jpa/processRecordEntities": {
      "get": {
        "tags": [
          "process-record-entity-entity-controller"
        ],
        "description": "get-processrecordentity",
        "operationId": "getCollectionResource-processrecordentity-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelProcessRecordEntity"
                }
              },
              "text/uri-list": {
                "schema": {
                  "type": "string"
                }
              },
              "application/x-spring-data-compact+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelProcessRecordEntity"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "process-record-entity-entity-controller"
        ],
        "description": "create-processrecordentity",
        "operationId": "postCollectionResource-processrecordentity-post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessRecordEntityRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProcessRecordEntity"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/spring/jpa/processRecordEntities/{id}": {
      "get": {
        "tags": [
          "process-record-entity-entity-controller"
        ],
        "description": "get-processrecordentity",
        "operationId": "getItemResource-processrecordentity-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProcessRecordEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "process-record-entity-entity-controller"
        ],
        "description": "update-processrecordentity",
        "operationId": "putItemResource-processrecordentity-put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessRecordEntityRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProcessRecordEntity"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProcessRecordEntity"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "process-record-entity-entity-controller"
        ],
        "description": "delete-processrecordentity",
        "operationId": "deleteItemResource-processrecordentity-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "process-record-entity-entity-controller"
        ],
        "description": "patch-processrecordentity",
        "operationId": "patchItemResource-processrecordentity-patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessRecordEntityRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelProcessRecordEntity"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/limits/rest/v2/spring/jpa/profile": {
      "get": {
        "tags": [
          "profile-controller"
        ],
        "operationId": "listAllFormsOfMetadata_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/RepresentationModelObject"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/spring/jpa/profile/limitsWorkflowProcessInstanceEntities": {
      "get": {
        "tags": [
          "profile-controller"
        ],
        "operationId": "descriptor_1_1_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              },
              "application/alps+json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/schema+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonSchema"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/spring/jpa/profile/processRecordEntities": {
      "get": {
        "tags": [
          "profile-controller"
        ],
        "operationId": "descriptor_1_1_2",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              },
              "application/alps+json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/schema+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonSchema"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/spring/jpa/profile/userTaskRecordEntities": {
      "get": {
        "tags": [
          "profile-controller"
        ],
        "operationId": "descriptor_1_1_3",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              },
              "application/alps+json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/schema+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonSchema"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/spring/jpa/userTaskRecordEntities": {
      "get": {
        "tags": [
          "user-task-record-entity-entity-controller"
        ],
        "description": "get-usertaskrecordentity",
        "operationId": "getCollectionResource-usertaskrecordentity-get_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelUserTaskRecordEntity"
                }
              },
              "text/uri-list": {
                "schema": {
                  "type": "string"
                }
              },
              "application/x-spring-data-compact+json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelEntityModelUserTaskRecordEntity"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-task-record-entity-entity-controller"
        ],
        "description": "create-usertaskrecordentity",
        "operationId": "postCollectionResource-usertaskrecordentity-post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserTaskRecordEntityRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUserTaskRecordEntity"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/spring/jpa/userTaskRecordEntities/{id}": {
      "get": {
        "tags": [
          "user-task-record-entity-entity-controller"
        ],
        "description": "get-usertaskrecordentity",
        "operationId": "getItemResource-usertaskrecordentity-get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUserTaskRecordEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "user-task-record-entity-entity-controller"
        ],
        "description": "update-usertaskrecordentity",
        "operationId": "putItemResource-usertaskrecordentity-put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserTaskRecordEntityRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUserTaskRecordEntity"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUserTaskRecordEntity"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "user-task-record-entity-entity-controller"
        ],
        "description": "delete-usertaskrecordentity",
        "operationId": "deleteItemResource-usertaskrecordentity-delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "user-task-record-entity-entity-controller"
        ],
        "description": "patch-usertaskrecordentity",
        "operationId": "patchItemResource-usertaskrecordentity-patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserTaskRecordEntityRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityModelUserTaskRecordEntity"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/limits/rest/v2/limits/autoconfig/connect": {
      "put": {
        "tags": [
          "auto-config-rest-service"
        ],
        "operationId": "connectLimitsToAtotiServer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitsConnectionProperties"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/structure/update": {
      "put": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "updateLimitStructure",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitStructure"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limit-process-instance/request-approval": {
      "put": {
        "tags": [
          "limits-process-instance-workflow-rest-controller"
        ],
        "operationId": "requestApproval",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitsProcessInstance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTaskRecordDTO"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limit-process-instance/reject": {
      "put": {
        "tags": [
          "limits-process-instance-workflow-rest-controller"
        ],
        "operationId": "reject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitsProcessInstance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limit-process-instance/process-warning": {
      "put": {
        "tags": [
          "limits-process-instance-workflow-rest-controller"
        ],
        "operationId": "processWarning",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitsProcessInstance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/AHistoryRecordDTO"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limit-process-instance/process-breach": {
      "put": {
        "tags": [
          "limits-process-instance-workflow-rest-controller"
        ],
        "operationId": "processBreach",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitsProcessInstance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/AHistoryRecordDTO"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limit-process-instance/close": {
      "put": {
        "tags": [
          "limits-process-instance-workflow-rest-controller"
        ],
        "operationId": "close",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitsProcessInstance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTaskRecordDTO"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limit-process-instance/cancel-request": {
      "put": {
        "tags": [
          "limits-process-instance-workflow-rest-controller"
        ],
        "operationId": "cancelRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitsProcessInstance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTaskRecordDTO"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limit-process-instance/approve": {
      "put": {
        "tags": [
          "limits-process-instance-workflow-rest-controller"
        ],
        "operationId": "approve",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitsProcessInstance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/database/branches/{branch}": {
      "put": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "editBranch",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonBranchPermissions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "postOnBranch",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fastForward",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "deleteBranch",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/content/rest/v7/files": {
      "get": {
        "tags": [
          "rest-content-server-controller"
        ],
        "operationId": "getFiles_1",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "/"
            }
          },
          {
            "name": "recursive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "-1"
            }
          },
          {
            "name": "includeContent",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "true"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonContentTree"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "rest-content-server-controller"
        ],
        "operationId": "putMethod",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "/"
            }
          },
          {
            "name": "permissions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ignored"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "rest-content-server-controller"
        ],
        "operationId": "postMethod",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "/"
            }
          },
          {
            "name": "move",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ignored"
            }
          },
          {
            "name": "import",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ignored"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "rest-content-server-controller"
        ],
        "operationId": "deleteMethod_1",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "/"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/xmla": {
      "post": {
        "tags": [
          "active-pivot-xmla-controller"
        ],
        "operationId": "doPost",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/notification-service/sse/v1/notifications/execute-action": {
      "post": {
        "tags": [
          "notification-sse-controller"
        ],
        "operationId": "executeAction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationActionPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationActionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notification-service/sse/v1/notifications/emitters/close": {
      "post": {
        "tags": [
          "notification-sse-controller"
        ],
        "operationId": "closeAllEmitters",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/notification-service/rest/v1/technical-notifications": {
      "post": {
        "tags": [
          "notification-rest-service"
        ],
        "operationId": "publishTechnicalNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/notification-service/rest/v1/technical-notification": {
      "post": {
        "tags": [
          "notification-rest-service"
        ],
        "operationId": "publishTechnicalNotification_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/notification-service/rest/v1/notifications": {
      "get": {
        "tags": [
          "notification-rest-service"
        ],
        "operationId": "getNotifications",
        "parameters": [
          {
            "name": "sourceId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "notification-rest-service"
        ],
        "operationId": "publishNotifications",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/notification-service/rest/v1/notifications/{id}/update-status": {
      "post": {
        "tags": [
          "notification-rest-service"
        ],
        "operationId": "updateNotificationStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationStatusDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/notification-service/rest/v1/notifications/execute-action": {
      "post": {
        "tags": [
          "notification-rest-service"
        ],
        "operationId": "executeNotificationAction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationActionPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/notification-service/rest/v1/notification": {
      "post": {
        "tags": [
          "notification-rest-service"
        ],
        "operationId": "publishNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/monitoring/jfr/stop/{name}": {
      "post": {
        "tags": [
          "jfr-controller"
        ],
        "operationId": "stopRecording",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/jfr/start/{name}": {
      "post": {
        "tags": [
          "jfr-controller"
        ],
        "operationId": "startRecording",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/limits/sse/v2/incidents/emitters/{emitterId}/close": {
      "post": {
        "tags": [
          "incidents-sse-controller"
        ],
        "operationId": "closeEmitter",
        "parameters": [
          {
            "name": "emitterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/limits/sse/v2/incidents/emitters/close": {
      "post": {
        "tags": [
          "incidents-sse-controller"
        ],
        "operationId": "closeAllEmitters_1",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/limits/rest/v2/scopes/level-names/{match-mode}": {
      "post": {
        "tags": [
          "scope-retrieval-rest-service"
        ],
        "operationId": "getScopesForLevelNames",
        "parameters": [
          {
            "name": "match-mode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MATCH_ALL",
                "MATCH_ANY",
                "CONTAINS_ALL",
                "CONTAINS_ANY"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Scope"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/scopes/level-members/{match-mode}": {
      "post": {
        "tags": [
          "scope-retrieval-rest-service"
        ],
        "operationId": "getScopesMatchingMembers",
        "parameters": [
          {
            "name": "match-mode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MATCH_ALL",
                "MATCH_ANY",
                "CONTAINS_ALL",
                "CONTAINS_ANY"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LevelMemberWithName"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Scope"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/scopes/level-member/{match-mode}": {
      "post": {
        "tags": [
          "scope-retrieval-rest-service"
        ],
        "operationId": "getScopesForLevelMember",
        "parameters": [
          {
            "name": "match-mode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MATCH_ALL",
                "MATCH_ANY",
                "CONTAINS_ALL",
                "CONTAINS_ANY"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LevelMemberWithName"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Scope"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limits-kpi/delete/{kpiName}": {
      "post": {
        "tags": [
          "kpi-crud-rest-service"
        ],
        "operationId": "delete",
        "parameters": [
          {
            "name": "kpiName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cubeName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serverName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/limits/rest/v2/limits-kpi/create/{kpiName}": {
      "post": {
        "tags": [
          "kpi-crud-rest-service"
        ],
        "operationId": "create",
        "parameters": [
          {
            "name": "kpiName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cubeName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serverName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitStructure",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LimitStructure"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/limits/rest/v2/limitEvaluation/unschedule": {
      "post": {
        "tags": [
          "limits-evaluation-rest-service"
        ],
        "operationId": "unschedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitEvaluation/structure/evaluate": {
      "post": {
        "tags": [
          "limits-evaluation-rest-service"
        ],
        "operationId": "evaluateLimitStructures",
        "parameters": [
          {
            "name": "asOfDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitEvaluation/structure/evaluate/{limitStructureId}": {
      "post": {
        "tags": [
          "limits-evaluation-rest-service"
        ],
        "operationId": "evaluateLimitStructure",
        "parameters": [
          {
            "name": "limitStructureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asOfDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitEvaluation/limit/evaluate": {
      "post": {
        "tags": [
          "limits-evaluation-rest-service"
        ],
        "operationId": "evaluateLimits",
        "parameters": [
          {
            "name": "asOfDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitEvaluation/limit/evaluate/{limitId}": {
      "post": {
        "tags": [
          "limits-evaluation-rest-service"
        ],
        "operationId": "evaluateLimit",
        "parameters": [
          {
            "name": "limitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asOfDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitEvaluation/evaluate/all": {
      "post": {
        "tags": [
          "limits-evaluation-rest-service"
        ],
        "operationId": "evaluateAll",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluationResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/uploadStructures": {
      "post": {
        "tags": [
          "upload-csv"
        ],
        "operationId": "uploadLimitStructures",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/uploadLimits": {
      "post": {
        "tags": [
          "upload-csv"
        ],
        "operationId": "uploadLimits",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/structures/save": {
      "post": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "saveLimitStructures",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LimitStructure"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/structure/save": {
      "post": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "saveLimitStructure",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitStructure"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/structure/create": {
      "post": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "createLimitStructure",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitStructure"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/limits/save": {
      "post": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "saveLimits",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Limit"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/limit/save": {
      "post": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "saveLimit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Limit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/inventory-structures/filter": {
      "post": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "filterInventoryLimitStructures",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LimitsInventoryRowDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/filter": {
      "post": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "filterLimitStructures",
        "parameters": [
          {
            "name": "excludeLimits",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includePendingApprovals",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isLiveOnly",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "includeWorkflowUiActions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LimitStructure"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/expire": {
      "post": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "expire",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitsExpirationDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/limits/rest/v2/limit-process-instance": {
      "get": {
        "tags": [
          "limits-process-instance-workflow-rest-controller"
        ],
        "operationId": "get",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/LimitsProcessInstance"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "limits-process-instance-workflow-rest-controller"
        ],
        "operationId": "initiate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LimitsProcessInstance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/AHistoryRecordDTO"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limit-process-instance/execute-task-action": {
      "post": {
        "tags": [
          "limits-process-instance-workflow-rest-controller"
        ],
        "operationId": "executeWorkflow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "workflowTaskActionExecutionDTO"
                ],
                "type": "object",
                "properties": {
                  "workflowTaskActionExecutionDTO": {
                    "$ref": "#/components/schemas/WorkflowTaskActionExecutionDTO"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "required": [
                  "workflowTaskActionExecutionDTO"
                ],
                "type": "object",
                "properties": {
                  "workflowTaskActionExecutionDTO": {
                    "$ref": "#/components/schemas/WorkflowTaskActionExecutionDTO"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/limits/rest/v2/incidents/breaches/filter": {
      "post": {
        "tags": [
          "incident-rest-controller"
        ],
        "operationId": "getBreachesLike",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterConditionDTOs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Incident"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/incidents/all/filter": {
      "post": {
        "tags": [
          "incident-rest-controller"
        ],
        "operationId": "getIncidentsLike",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterConditionDTOs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Incident"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/asOfDate/set": {
      "post": {
        "tags": [
          "limits-as-of-date-rest-service"
        ],
        "operationId": "set",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/connectors/rest/dlc/v1/execute": {
      "post": {
        "tags": [
          "data-load-controller-rest-controller"
        ],
        "operationId": "execute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataLoadControllerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLoadControllerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/audit-service/rest/v1/audit-entries": {
      "post": {
        "tags": [
          "audit-service-rest-controller"
        ],
        "operationId": "getAuditEntries",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilterConditionDTO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditEntry"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/audit-service/rest/v1/audit-entries/{type}": {
      "post": {
        "tags": [
          "audit-service-rest-controller"
        ],
        "operationId": "getAuditEntries_1",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilterConditionDTO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditEntry"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/audit-service/rest/v1/audit-entries/{type}/{objectId}": {
      "post": {
        "tags": [
          "audit-service-rest-controller"
        ],
        "operationId": "getAuditEntries_2",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FilterConditionDTO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditEntry"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/database/data/tables/{tableName}": {
      "get": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "queryDatabaseGet",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "epoch",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": -1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonDatabaseQueryResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "queryDatabase",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ignored"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonDatabaseQueryResult"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/database/data/branches/{branch}": {
      "post": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "updateTable",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonDatabaseEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/JsonTableResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/database/branches": {
      "post": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "createBranch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonBranchCreation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/cube/spreadsheet/contextvalues": {
      "get": {
        "tags": [
          "spreadsheet-rest-service-controller"
        ],
        "operationId": "getContextValues",
        "parameters": [
          {
            "name": "pivot",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContextValueDescription"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "spreadsheet-rest-service-controller"
        ],
        "operationId": "setContextValues",
        "parameters": [
          {
            "name": "pivot",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/cube/query/mdx": {
      "post": {
        "tags": [
          "queries-rest-service-controller"
        ],
        "operationId": "mdxQuery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonMdxQuery"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/cube/query/mdx/queryplan": {
      "get": {
        "tags": [
          "queries-rest-service-controller"
        ],
        "operationId": "mdxQueryPlan_1",
        "parameters": [
          {
            "name": "mdx",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeout",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "asSummary",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "false"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonQueryPlanData"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "queries-rest-service-controller"
        ],
        "operationId": "mdxQueryPlan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonMdxQueryPlan"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonQueryPlanData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/cube/query/mdx/drillthroughheaders": {
      "post": {
        "tags": [
          "queries-rest-service-controller"
        ],
        "operationId": "mdxDrillthroughHeadersQuery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonMdxQuery"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonTabularHeader"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/cube/dataexport/export": {
      "post": {
        "tags": [
          "data-export-rest-service-controller"
        ],
        "operationId": "mdxExport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonDataExportOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/cube/dataexport/download": {
      "post": {
        "tags": [
          "data-export-rest-service-controller"
        ],
        "operationId": "mdxDownload",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonDataExportOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/cube/configuration/locale": {
      "post": {
        "tags": [
          "configuration-rest-service-controller"
        ],
        "operationId": "changeLocale",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonDefinitionLocale"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/cube/configuration/execute": {
      "post": {
        "tags": [
          "configuration-rest-service-controller"
        ],
        "operationId": "execute_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonMdxDefinitionStatement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/activeviam/content/rest/v7/bulk/put": {
      "post": {
        "tags": [
          "rest-bulk-api-server-controller"
        ],
        "operationId": "putMethod_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutJsonParam"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/activeviam/content/rest/v7/bulk/move": {
      "post": {
        "tags": [
          "rest-bulk-api-server-controller"
        ],
        "operationId": "moveMethod",
        "parameters": [
          {
            "name": "throwNotFound",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "true"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/content/rest/v7/bulk/get": {
      "post": {
        "tags": [
          "rest-bulk-api-server-controller"
        ],
        "operationId": "getFiles",
        "parameters": [
          {
            "name": "throwNotFound",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "true"
            }
          },
          {
            "name": "includeContent",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "true"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/JsonContentTree"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/content/rest/v7/bulk/delete": {
      "post": {
        "tags": [
          "rest-bulk-api-server-controller"
        ],
        "operationId": "deleteMethod",
        "parameters": [
          {
            "name": "throwNotFound",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "true"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/versions/rest": {
      "get": {
        "tags": [
          "versions-rest-service-controller"
        ],
        "operationId": "getAllVersions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApisDto"
                }
              }
            }
          }
        }
      }
    },
    "/notification-service/sse/v1/notifications/subscribe": {
      "get": {
        "tags": [
          "notification-sse-controller"
        ],
        "operationId": "subscribe",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSseEmitter"
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/jfr/list": {
      "get": {
        "tags": [
          "jfr-controller"
        ],
        "operationId": "listRecordings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logout/logo.png": {
      "get": {
        "tags": [
          "login-controller"
        ],
        "operationId": "logoutAtotiLogo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/logout/index.html": {
      "get": {
        "tags": [
          "login-controller"
        ],
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": [
          "login-controller"
        ],
        "operationId": "login",
        "parameters": [
          {
            "name": "error",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirectUrl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/login/logo.svg": {
      "get": {
        "tags": [
          "login-controller"
        ],
        "operationId": "logo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "image/svg+xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/login/index.html": {
      "get": {
        "tags": [
          "login-controller"
        ],
        "operationId": "login_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/limits/sse/v2/incidents/subscribe/filter": {
      "get": {
        "tags": [
          "incidents-sse-controller"
        ],
        "operationId": "subscribe_1",
        "parameters": [
          {
            "name": "asOfDates",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date"
              }
            }
          },
          {
            "name": "incidentTypes",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentsSseEmitter"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/settings": {
      "get": {
        "tags": [
          "limits-server-settings-rest-controller"
        ],
        "operationId": "limitServerSettings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/LimitsServerSettingsDTO"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/scopes": {
      "get": {
        "tags": [
          "scope-retrieval-rest-service"
        ],
        "operationId": "getAllScopes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Scope"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/scopes/{level-name}/{match-mode}": {
      "get": {
        "tags": [
          "scope-retrieval-rest-service"
        ],
        "operationId": "getScopesForLevelName",
        "parameters": [
          {
            "name": "level-name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "match-mode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MATCH_ALL",
                "MATCH_ANY",
                "CONTAINS_ALL",
                "CONTAINS_ANY"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Scope"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limits-kpi/permissions/{serverName}": {
      "get": {
        "tags": [
          "limits-kpi-permissions-rest-service"
        ],
        "operationId": "getKpiPermissions",
        "parameters": [
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KpiPermissionsDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/structures": {
      "get": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "getLimitStructures",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LimitStructure"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/structure/{limitStructureId}/workflow-states": {
      "get": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "getLimitsWorkflowStates",
        "parameters": [
          {
            "name": "limitStructureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/LimitWorkflowStateDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/structure/get": {
      "get": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "getLimitStructures_1",
        "parameters": [
          {
            "name": "excludeLimits",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includePendingApprovals",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isLiveOnly",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "includeWorkflowUiActions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LimitStructure"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/structure/get/{limitStructureId}": {
      "get": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "getLimitStructure",
        "parameters": [
          {
            "name": "limitStructureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeLimits",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isLiveOnly",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "includeWorkflowUiActions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LimitStructure"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/limits/get": {
      "get": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "getLimits",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Limit"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/limits/get/{limitId}": {
      "get": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "getLimit",
        "parameters": [
          {
            "name": "limitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Limit"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/export": {
      "get": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "export",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/LimitsExportDTO"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/canStart": {
      "get": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "isCurrentUserCreate",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/asOfDate": {
      "get": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "getAsOfDate",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string",
                  "format": "date"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limit-process-instance/{limitProcessInstanceKey}": {
      "get": {
        "tags": [
          "limits-process-instance-workflow-rest-controller"
        ],
        "operationId": "get_1",
        "parameters": [
          {
            "name": "limitProcessInstanceKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/LimitsProcessInstance"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limit-process-instance/process-instance-history/{limitProcessInstanceKey}": {
      "get": {
        "tags": [
          "limits-process-instance-workflow-rest-controller"
        ],
        "operationId": "processInstanceHistory",
        "parameters": [
          {
            "name": "limitProcessInstanceKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeCustomVariables",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "includeHistoricalDifferences",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AHistoryRecordDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limit-process-instance/key-history/{limitProcessInstanceKey}": {
      "get": {
        "tags": [
          "limits-process-instance-workflow-rest-controller"
        ],
        "operationId": "keyHistory",
        "parameters": [
          {
            "name": "limitProcessInstanceKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limit-process-instance/getLimitWorkflowUIActions/{limitId}": {
      "get": {
        "tags": [
          "limits-process-instance-workflow-rest-controller"
        ],
        "operationId": "getLimitWorkflowUIActions",
        "parameters": [
          {
            "name": "limitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowTaskActionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limit-process-instance/getBreachWorkflowUIActions/{incidentKey}": {
      "get": {
        "tags": [
          "limits-process-instance-workflow-rest-controller"
        ],
        "operationId": "getBreachWorkflowUIActions",
        "parameters": [
          {
            "name": "incidentKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowTaskActionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/incidents/breaches/all": {
      "get": {
        "tags": [
          "incident-rest-controller"
        ],
        "operationId": "getAllBreaches",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Incident"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/incidents/as-of-dates": {
      "get": {
        "tags": [
          "incident-rest-controller"
        ],
        "operationId": "getDistinctAsOfDates",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "uniqueItems": true,
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/incidents/all": {
      "get": {
        "tags": [
          "incident-rest-controller"
        ],
        "operationId": "getAllIncidents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Incident"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/connectors/rest/dlc/v1/status": {
      "get": {
        "tags": [
          "data-load-controller-rest-controller"
        ],
        "operationId": "status",
        "parameters": [
          {
            "name": "processingId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLoadControllerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/audit-service/rest/v1/audit-entries/types": {
      "get": {
        "tags": [
          "audit-service-rest-controller"
        ],
        "operationId": "getTypes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/workflow-service/rest/v1/task-attachments/download/": {
      "get": {
        "tags": [
          "workflow-service-rest-controller"
        ],
        "operationId": "downloadFile",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/ping": {
      "get": {
        "tags": [
          "ping-pivot-service-controller"
        ],
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/database/discovery": {
      "get": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "getFullDiscovery",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonDatabaseDiscovery"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/database/discovery/tables": {
      "get": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "getTableDescriptions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/JsonTableDescription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/database/discovery/tables/{tableName}": {
      "get": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "getTableDescription",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonTableDescription"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/database/discovery/tables/{tableName}/size": {
      "get": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "getTableSize",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/database/discovery/tableNames": {
      "get": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "getTableNames",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/database/discovery/separator": {
      "get": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "getPathSeparator",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/database/discovery/joins": {
      "get": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "getJoinDescriptions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JsonDatabaseJoin"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/database/discovery/joins/{ownerTable}": {
      "get": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "getJoinDescription",
        "parameters": [
          {
            "name": "ownerTable",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/JsonDatabaseJoin"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/database/discovery/branches": {
      "get": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "getBranchesDescription",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/JsonBranchDescription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/database/discovery/branches/{branch}": {
      "get": {
        "tags": [
          "database-rest-service-controller"
        ],
        "operationId": "getBranchDescription",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonBranchDescription"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/cube/discovery": {
      "get": {
        "tags": [
          "discovery-rest-service-controller"
        ],
        "operationId": "query",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonDiscovery"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/cube/configuration/kpis/{pivotId}": {
      "get": {
        "tags": [
          "configuration-rest-service-controller"
        ],
        "operationId": "getKpis",
        "parameters": [
          {
            "name": "pivotId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonDefinitionsPermissions"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/pivot/rest/v9/cube/configuration/calculatedMembers/{pivotId}": {
      "get": {
        "tags": [
          "configuration-rest-service-controller"
        ],
        "operationId": "getCalculatedMembers",
        "parameters": [
          {
            "name": "pivotId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonDefinitionsPermissions"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/monitoring/rest/v3/threads_usage": {
      "get": {
        "tags": [
          "monitoring-rest-service-controller"
        ],
        "operationId": "getThreadsUsage",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/monitoring/rest/v3/last_activity_times": {
      "get": {
        "tags": [
          "monitoring-rest-service-controller"
        ],
        "operationId": "getPivotsLastActivityTimes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/monitoring/rest/v3/gc_stats": {
      "get": {
        "tags": [
          "monitoring-rest-service-controller"
        ],
        "operationId": "getGcStats",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/monitoring/rest/v3/cpu_load": {
      "get": {
        "tags": [
          "monitoring-rest-service-controller"
        ],
        "operationId": "getCpuLoad",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/monitoring/rest/v3/check_responsiveness": {
      "get": {
        "tags": [
          "monitoring-rest-service-controller"
        ],
        "operationId": "checkResponsiveness",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/monitoring/rest/v3/all_stats": {
      "get": {
        "tags": [
          "monitoring-rest-service-controller"
        ],
        "operationId": "getAllStats",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/jwt/rest/v3/token": {
      "get": {
        "tags": [
          "jwt-rest-service-controller"
        ],
        "operationId": "getToken",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/activeviam/content/rest/v7/ping": {
      "get": {
        "tags": [
          "ping-content-server-controller"
        ],
        "operationId": "ping_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/structure/delete/{limitStructureId}": {
      "delete": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "deleteLimitStructure",
        "parameters": [
          {
            "name": "limitStructureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/limits/delete": {
      "delete": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "deleteLimits",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/limits/rest/v2/limitDefinition/limit/delete/{limitId}": {
      "delete": {
        "tags": [
          "limits-definition-crud-rest-service"
        ],
        "operationId": "deleteLimits_1",
        "parameters": [
          {
            "name": "limitId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AbstractJsonSchemaPropertyObject": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "readOnly": {
            "type": "boolean"
          }
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AbstractJsonSchemaPropertyObject"
            }
          },
          "requiredProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "JsonSchema": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AbstractJsonSchemaPropertyObject"
            }
          },
          "requiredProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "definitions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Item"
            }
          },
          "type": {
            "type": "string"
          },
          "$schema": {
            "type": "string"
          }
        }
      },
      "Links": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/Link"
        }
      },
      "RepresentationModelObject": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "EntityModelLimitsWorkflowProcessInstanceEntity": {
        "type": "object",
        "properties": {
          "workflowType": {
            "type": "string"
          },
          "limitGroup": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "sourceId": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "validFrom": {
            "type": "string",
            "format": "date"
          },
          "validTo": {
            "type": "string",
            "format": "date"
          },
          "frequencyType": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string"
          },
          "pollingFrequency": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string"
          },
          "kpiType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "limitValues": {
            "maximum": 4000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "absoluteValueInd": {
            "type": "boolean"
          },
          "warningThreshold": {
            "maximum": 4000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "measureName": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "precedence": {
            "maximum": 4000,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "limitScope": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "scopeInt": {
            "maximum": 4000,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "scopeArray": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "limitStatus": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "limitChangesWorkflow": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "limitChangesWorkflowParameters": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "exceptionWorkflow": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "cubeName": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "serverName": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "systemState": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "lastUpdateTimeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "exceptionStatus": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "exceptionComment": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "exceptionCategory": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "limitId": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "definitionName": {
            "type": "string"
          },
          "asOfDate": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string"
          },
          "comment": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "PageMetadata": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PagedModelEntityModelLimitsWorkflowProcessInstanceEntity": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "limitsWorkflowProcessInstanceEntities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityModelLimitsWorkflowProcessInstanceEntity"
                }
              }
            }
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "IKeyedObjectObject": {
        "type": "object"
      },
      "EntityModelProcessRecordEntity": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IKeyedObjectObject"
          },
          "type": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "processInstanceId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "processDefinitionName": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "PagedModelEntityModelProcessRecordEntity": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "processRecordEntities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityModelProcessRecordEntity"
                }
              }
            }
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "EntityModelUserTaskRecordEntity": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IKeyedObjectObject"
          },
          "type": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "processInstanceId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskName": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "PagedModelEntityModelUserTaskRecordEntity": {
        "type": "object",
        "properties": {
          "_embedded": {
            "type": "object",
            "properties": {
              "userTaskRecordEntities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityModelUserTaskRecordEntity"
                }
              }
            }
          },
          "_links": {
            "$ref": "#/components/schemas/Links"
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "LimitsWorkflowProcessInstanceEntityRequestBody": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "workflowType": {
            "type": "string"
          },
          "limitGroup": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "sourceId": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "validFrom": {
            "type": "string",
            "format": "date"
          },
          "validTo": {
            "type": "string",
            "format": "date"
          },
          "frequencyType": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string"
          },
          "pollingFrequency": {
            "maxLength": 400,
            "minLength": 0,
            "type": "string"
          },
          "kpiType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "limitValues": {
            "maximum": 4000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "absoluteValueInd": {
            "type": "boolean"
          },
          "warningThreshold": {
            "maximum": 4000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "measureName": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "precedence": {
            "maximum": 4000,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "limitScope": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "scopeInt": {
            "maximum": 4000,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "scopeArray": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "limitStatus": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "limitChangesWorkflow": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "limitChangesWorkflowParameters": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "exceptionWorkflow": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "cubeName": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "serverName": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "systemState": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "lastUpdateTimeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "exceptionStatus": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "exceptionComment": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "exceptionCategory": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "limitId": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          },
          "definitionName": {
            "type": "string"
          },
          "asOfDate": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string"
          },
          "comment": {
            "maxLength": 4000,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "ProcessRecordEntityRequestBody": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IKeyedObjectObject"
          },
          "type": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "processInstanceId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "processDefinitionName": {
            "type": "string"
          },
          "action": {
            "type": "string"
          }
        }
      },
      "UserTaskRecordEntityRequestBody": {
        "type": "object",
        "properties": {
          "object": {
            "$ref": "#/components/schemas/IKeyedObjectObject"
          },
          "type": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "processInstanceId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "taskName": {
            "type": "string"
          },
          "action": {
            "type": "string"
          }
        }
      },
      "LimitsConnectionContentServerProperties": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "limitsCreatedMeasuresOwners": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LimitsConnectionProperties": {
        "type": "object",
        "properties": {
          "serverName": {
            "type": "string"
          },
          "atotiBaseUrl": {
            "type": "string"
          },
          "atotiServerRestUrl": {
            "type": "string"
          },
          "atotiDiscoveryUrl": {
            "type": "string"
          },
          "atotiConfigurationUrl": {
            "type": "string"
          },
          "atotiMdxQueryUrl": {
            "type": "string"
          },
          "atotiMdxDownloadUrl": {
            "type": "string"
          },
          "atotiConfigurationExecuteUrl": {
            "type": "string"
          },
          "atotiConfigurationSuffix": {
            "type": "string"
          },
          "atotiDiscoverySuffix": {
            "type": "string"
          },
          "atotiExecuteSuffix": {
            "type": "string"
          },
          "asOfDate": {
            "type": "string"
          },
          "serverVersion": {
            "type": "string"
          },
          "contentServer": {
            "$ref": "#/components/schemas/LimitsConnectionContentServerProperties"
          },
          "limitsBaseUrl": {
            "type": "string"
          },
          "limitsRestUrl": {
            "type": "string"
          },
          "limitsDiscoveryUrl": {
            "type": "string"
          },
          "levelPathUrl": {
            "type": "string"
          },
          "limitsPingUrl": {
            "type": "string"
          },
          "connectionDelay": {
            "type": "integer",
            "format": "int64"
          },
          "connectionAttempts": {
            "type": "integer",
            "format": "int64"
          },
          "servicePrincipal": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "Limit": {
        "type": "object",
        "properties": {
          "structureId": {
            "type": "string"
          },
          "limitId": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "limitType": {
            "type": "string",
            "enum": [
              "OFFICIAL",
              "TEMPORARY"
            ]
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "limitStatus": {
            "type": "string"
          },
          "sourceLimitId": {
            "type": "string"
          },
          "limitValues": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "draftLimitStatus": {
            "type": "string"
          },
          "draftLimit": {
            "$ref": "#/components/schemas/Limit"
          },
          "formActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimitActionDTO"
            }
          },
          "workflowActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowTaskActionDTO"
            }
          },
          "alive": {
            "type": "boolean"
          }
        }
      },
      "LimitActionDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "LimitStructure": {
        "type": "object",
        "properties": {
          "group": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "structureId": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "kpiType": {
            "type": "string",
            "enum": [
              "Greater Than",
              "Less Than"
            ]
          },
          "pollingFrequency": {
            "type": "string",
            "enum": [
              "EOD",
              "INTRADAY"
            ]
          },
          "measureName": {
            "type": "string"
          },
          "absoluteValueIndicator": {
            "type": "boolean"
          },
          "warningThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "exceptionStatus": {
            "type": "string"
          },
          "exceptionWorkflow": {
            "type": "string"
          },
          "limitChangesWorkflow": {
            "type": "string"
          },
          "limitChangesWorkflowParameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "cubeName": {
            "type": "string"
          },
          "serverName": {
            "type": "string"
          },
          "systemState": {
            "type": "string"
          },
          "utilizationDashboardID": {
            "type": "string"
          },
          "numberOfPendingApprovals": {
            "type": "integer",
            "format": "int32"
          },
          "formActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimitActionDTO"
            }
          },
          "scopeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "limits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Limit"
            }
          }
        }
      },
      "Scope": {
        "type": "object",
        "properties": {
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeLocation"
            }
          }
        }
      },
      "ScopeLevelMember": {
        "type": "object"
      },
      "ScopeLocation": {
        "type": "object",
        "properties": {
          "selectedLevelName": {
            "type": "string"
          },
          "operator": {
            "type": "string",
            "enum": [
              "EQUAL",
              "TOTAL_EQUALS",
              "NOT_EQUAL",
              "TOTAL_EXCEPT"
            ]
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScopeLevelMember"
            }
          }
        }
      },
      "WorkflowTaskActionDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "taskKey": {
            "type": "string"
          },
          "style": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "taskInputFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowTaskActionInputFieldDTO"
            }
          }
        }
      },
      "WorkflowTaskActionInputFieldDTO": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "taskVariable": {
            "type": "string"
          },
          "inputType": {
            "type": "string",
            "enum": [
              "SELECT",
              "TEXT",
              "LINK",
              "ATTACHMENTS"
            ]
          },
          "required": {
            "type": "boolean"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultValue": {
            "type": "string"
          }
        }
      },
      "AHistoryRecordDTO": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "object": {
            "$ref": "#/components/schemas/IKeyedObjectObject"
          },
          "key": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "Incident": {
        "type": "object",
        "properties": {
          "limitId": {
            "type": "string"
          },
          "incidentId": {
            "type": "string"
          },
          "incidentType": {
            "type": "string"
          },
          "limitValue": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "limitType": {
            "type": "string",
            "enum": [
              "OFFICIAL",
              "TEMPORARY"
            ]
          },
          "measureValue": {
            "type": "number",
            "format": "double"
          },
          "scope": {
            "$ref": "#/components/schemas/Scope"
          },
          "location": {
            "type": "string"
          },
          "mdx": {
            "type": "string"
          },
          "asOfDate": {
            "type": "string",
            "format": "date"
          },
          "evaluationTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "sessionId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "utilization": {
            "type": "number",
            "format": "double"
          },
          "workflow": {
            "type": "string"
          },
          "workflowParameters": {
            "type": "string"
          },
          "limitStructureName": {
            "type": "string"
          },
          "structureId": {
            "type": "string"
          },
          "latestHistory": {
            "$ref": "#/components/schemas/AHistoryRecordDTO"
          },
          "workflowActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowTaskActionDTO"
            }
          },
          "serverName": {
            "type": "string"
          },
          "cubeName": {
            "type": "string"
          },
          "utilizationDashboardID": {
            "type": "string"
          }
        }
      },
      "LimitsProcessInstance": {
        "type": "object",
        "properties": {
          "limitId": {
            "type": "string"
          },
          "incidentId": {
            "type": "string"
          },
          "workflowType": {
            "type": "string"
          },
          "workflowParameters": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "category": {
            "type": "string"
          },
          "asOfDate": {
            "type": "string"
          },
          "limitStructureName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "limit": {
            "$ref": "#/components/schemas/Limit"
          },
          "incident": {
            "$ref": "#/components/schemas/Incident"
          },
          "exceptionCategory": {
            "type": "string"
          },
          "exceptionComment": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "CREATION",
              "EXCEPTION"
            ]
          }
        }
      },
      "UserTaskRecordDTO": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "object": {
            "$ref": "#/components/schemas/IKeyedObjectObject"
          },
          "key": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "taskName": {
            "type": "string"
          },
          "action": {
            "type": "string"
          }
        }
      },
      "JsonBranchPermissions": {
        "type": "object",
        "properties": {
          "owners": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readers": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "StreamingResponseBody": {
        "type": "object"
      },
      "NotificationActionPayload": {
        "type": "object",
        "properties": {
          "actionType": {
            "type": "string"
          },
          "notificationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "NotificationActionResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "severity": {
            "type": "string",
            "enum": [
              "HIGH",
              "MEDIUM",
              "LOW"
            ]
          },
          "classifiers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultActions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/NotificationAction"
            }
          },
          "customActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationAction"
            }
          },
          "applicationName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "sourceId": {
            "type": "string"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isRead": {
            "type": "boolean"
          }
        }
      },
      "NotificationAction": {
        "type": "object",
        "properties": {
          "actionName": {
            "type": "string",
            "enum": [
              "MARK_READ",
              "MARK_UNREAD",
              "DELETE"
            ]
          },
          "icon": {
            "type": "string"
          },
          "confirmationMessage": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "UpdateNotificationStatusDTO": {
        "type": "object",
        "properties": {
          "updatedStatus": {
            "type": "string"
          },
          "statusCode": {
            "type": "string",
            "enum": [
              "LIVE",
              "OBSOLETE"
            ]
          }
        }
      },
      "LevelMemberWithName": {
        "type": "object",
        "properties": {
          "levelName": {
            "type": "string"
          },
          "levelMemberValue": {
            "type": "string"
          }
        }
      },
      "EvaluationResponseDTO": {
        "type": "object",
        "properties": {
          "numberOfBreaches": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfWarnings": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfPasses": {
            "type": "integer",
            "format": "int32"
          },
          "durationInMilliseconds": {
            "type": "integer",
            "format": "int64"
          },
          "limitStructureErrors": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LimitStructureEvaluationErrorResponseDTO"
            }
          },
          "limitErrors": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LimitEvaluationErrorResponseDTO"
            }
          }
        }
      },
      "LimitEvaluationErrorResponseDTO": {
        "type": "object",
        "properties": {
          "stackTrace": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "LimitStructureEvaluationErrorResponseDTO": {
        "type": "object",
        "properties": {
          "limitErrors": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LimitEvaluationErrorResponseDTO"
            }
          },
          "stackTrace": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "LimitsInventoryRowDTO": {
        "type": "object",
        "properties": {
          "structureId": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "measureName": {
            "type": "string"
          },
          "numberOfPendingApprovals": {
            "type": "integer",
            "format": "int32"
          },
          "cubeName": {
            "type": "string"
          },
          "serverName": {
            "type": "string"
          },
          "utilizationDashboardID": {
            "type": "string"
          },
          "formActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimitActionDTO"
            }
          }
        }
      },
      "LimitsExpirationDTO": {
        "type": "object",
        "properties": {
          "limitIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "asOfDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "WorkflowTaskActionExecutionDTO": {
        "type": "object",
        "properties": {
          "taskKey": {
            "type": "string"
          },
          "workflowType": {
            "type": "string"
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "taskVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "FilterConditionDTO": {
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string"
          },
          "possibleValues": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "FilterConditionDTOs": {
        "type": "object",
        "properties": {
          "incidentConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterConditionDTO"
            }
          }
        }
      },
      "DataLoadControllerRequest": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string"
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scope": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "DataLoadControllerResponse": {
        "type": "object",
        "properties": {
          "taskName": {
            "type": "string"
          },
          "timeTakenMs": {
            "type": "integer",
            "format": "int64"
          },
          "dlcLoadingStatus": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IHealthEvent"
            }
          }
        }
      },
      "IHealthEvent": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string"
          },
          "lineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "threadId": {
            "type": "integer",
            "format": "int64"
          },
          "level": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "resourceBundleName": {
                "type": "string"
              },
              "localizedName": {
                "type": "string"
              }
            }
          },
          "timeStamp": {
            "type": "integer",
            "format": "int64"
          },
          "threadName": {
            "type": "string"
          },
          "tags": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "clazz": {
            "type": "string"
          },
          "upTime": {
            "type": "integer",
            "format": "int64"
          },
          "eventProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "AuditEntry": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "objectId": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "oldValue": {
            "type": "object"
          },
          "newValue": {
            "type": "object"
          },
          "user": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "extraFields": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "JsonDatabaseQueryResult": {
        "type": "object",
        "properties": {
          "epoch": {
            "type": "integer",
            "format": "int64"
          },
          "pagination": {
            "$ref": "#/components/schemas/JsonPagination"
          }
        }
      },
      "JsonPagination": {
        "type": "object",
        "properties": {
          "previousPage": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "integer",
            "format": "int32"
          },
          "previousPageUrl": {
            "type": "string"
          },
          "nextPageUrl": {
            "type": "string"
          }
        }
      },
      "JsonTabularHeader": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          }
        }
      },
      "JsonDatabaseAction": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "INSERT",
              "UPDATE",
              "DELETE"
            ]
          },
          "baseTable": {
            "type": "string"
          },
          "lines": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "where": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "updateProcedure": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "JsonDatabaseEdit": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonDatabaseAction"
            }
          },
          "expectedEpoch": {
            "type": "integer",
            "format": "int64"
          },
          "context": {
            "$ref": "#/components/schemas/JsonDatabaseEditContext"
          }
        }
      },
      "JsonDatabaseEditContext": {
        "type": "object",
        "properties": {
          "statisticsOption": {
            "type": "string"
          }
        }
      },
      "JsonNode": {
        "type": "object"
      },
      "JsonTableResult": {
        "type": "object",
        "properties": {
          "updatedRows": {
            "type": "integer",
            "format": "int64"
          },
          "insertedRows": {
            "type": "integer",
            "format": "int64"
          },
          "deletedRows": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "JsonBranchCreation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "expectedEpoch": {
            "type": "integer",
            "format": "int64"
          },
          "parent": {
            "type": "string"
          },
          "permissions": {
            "$ref": "#/components/schemas/JsonBranchPermissions"
          }
        }
      },
      "JsonMdxQuery": {
        "type": "object",
        "properties": {
          "mdx": {
            "type": "string"
          },
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "JsonMdxQueryPlan": {
        "type": "object",
        "properties": {
          "mdx": {
            "type": "string"
          },
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "queriesTimeLimit": {
            "type": "string"
          }
        }
      },
      "DatabaseRetrievalData": {
        "type": "object",
        "properties": {
          "store": {
            "type": "string"
          },
          "fields": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "joinedMeasure": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "condition": {
            "type": "string"
          },
          "retrievalId": {
            "type": "integer",
            "format": "int32"
          },
          "resultSizes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "timingInfo": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      },
      "FilterData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "IPlanInfoData": {
        "type": "object"
      },
      "JsonQueryPlanData": {
        "type": "object",
        "properties": {
          "planInfo": {
            "$ref": "#/components/schemas/IPlanInfoData"
          },
          "aggregateRetrievals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetrievalData"
            }
          },
          "dependencies": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "databaseRetrievals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatabaseRetrievalData"
            }
          },
          "databaseDependencies": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "queryFilters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterData"
            }
          },
          "querySummary": {
            "$ref": "#/components/schemas/QuerySummaryData"
          }
        }
      },
      "LocationData": {
        "type": "object",
        "properties": {
          "dimension": {
            "type": "string"
          },
          "hierarchy": {
            "type": "string"
          },
          "level": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "path": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "QuerySummaryData": {
        "type": "object",
        "properties": {
          "measures": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalRetrievals": {
            "type": "integer",
            "format": "int32"
          },
          "retrievalsCountByType": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "partitioningCountByType": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "resultSizeByPartitioning": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "partialProviders": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalDatabaseResultSize": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RetrievalData": {
        "type": "object",
        "properties": {
          "retrievalId": {
            "type": "integer",
            "format": "int32"
          },
          "partialProviderName": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "partitioning": {
            "type": "string"
          },
          "location": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationData"
            }
          },
          "measures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "filterId": {
            "type": "integer",
            "format": "int32"
          },
          "measureProvider": {
            "type": "string"
          },
          "resultSizes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "timingInfo": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "underlyingDataNodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IJsonOutputConfiguration": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "columnFormatters": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "fileConfiguration": {
            "$ref": "#/components/schemas/JsonFileConfiguration"
          }
        }
      },
      "JsonDataExportOrder": {
        "type": "object",
        "properties": {
          "jsonMdxQuery": {
            "$ref": "#/components/schemas/JsonMdxQuery"
          },
          "outputConfiguration": {
            "$ref": "#/components/schemas/IJsonOutputConfiguration"
          }
        }
      },
      "JsonFileConfiguration": {
        "type": "object",
        "properties": {
          "directoryName": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "useZipFile": {
            "type": "boolean"
          },
          "useMultipleFiles": {
            "type": "boolean"
          },
          "maxLinesPerFile": {
            "type": "integer",
            "format": "int32"
          },
          "maxBatchesPerFile": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "JsonDefinitionLocale": {
        "type": "object",
        "properties": {
          "locale": {
            "type": "string"
          }
        }
      },
      "JsonMdxDefinitionStatement": {
        "type": "object",
        "properties": {
          "statement": {
            "type": "string"
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "owner": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "type": "string"
            }
          },
          "reader": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PutJsonParam": {
        "type": "object",
        "properties": {
          "pathToContent": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "overwrite": {
            "type": "boolean"
          },
          "recursive": {
            "type": "boolean"
          }
        }
      },
      "IContentTreeJsonContentEntry": {
        "type": "object",
        "properties": {
          "entry": {
            "$ref": "#/components/schemas/JsonContentEntry"
          },
          "children": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IContentTreeJsonContentEntry"
            }
          }
        }
      },
      "JsonContentEntry": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "isDirectory": {
            "type": "boolean"
          },
          "owner": {
            "type": "string",
            "writeOnly": true
          },
          "reader": {
            "type": "string",
            "writeOnly": true
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "readers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "lastEditor": {
            "type": "string"
          },
          "canRead": {
            "type": "boolean"
          },
          "canWrite": {
            "type": "boolean"
          }
        }
      },
      "JsonContentTree": {
        "type": "object",
        "properties": {
          "entry": {
            "$ref": "#/components/schemas/JsonContentEntry"
          },
          "children": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IContentTreeJsonContentEntry"
            }
          }
        }
      },
      "ApiVersionDto": {
        "type": "object",
        "properties": {
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VersionDto"
            }
          }
        }
      },
      "ApisDto": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "serverVersion": {
            "type": "string"
          },
          "apis": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ApiVersionDto"
            }
          }
        }
      },
      "VersionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "restPath": {
            "type": "string"
          },
          "wsPath": {
            "type": "string"
          }
        }
      },
      "NotificationSseEmitter": {
        "type": "object",
        "properties": {
          "timeout": {
            "type": "integer",
            "format": "int64"
          },
          "emitterId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string"
          },
          "userAuthorities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "eventIdGenerator": {
            "type": "object",
            "properties": {
              "opaque": {
                "type": "integer",
                "format": "int32"
              },
              "acquire": {
                "type": "integer",
                "format": "int32"
              },
              "release": {
                "type": "integer",
                "format": "int32",
                "writeOnly": true
              },
              "andIncrement": {
                "type": "integer",
                "format": "int32"
              },
              "andDecrement": {
                "type": "integer",
                "format": "int32"
              },
              "plain": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "ILimitsRetrievalService": {
        "type": "object",
        "properties": {
          "limitStructures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimitStructure"
            }
          },
          "limits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Limit"
            }
          }
        }
      },
      "IncidentsSseEmitter": {
        "type": "object",
        "properties": {
          "timeout": {
            "type": "integer",
            "format": "int64"
          },
          "emitterId": {
            "type": "integer",
            "format": "int32"
          },
          "conditionDTOS": {
            "$ref": "#/components/schemas/FilterConditionDTOs"
          },
          "eventIdGenerator": {
            "type": "object",
            "properties": {
              "opaque": {
                "type": "integer",
                "format": "int32"
              },
              "acquire": {
                "type": "integer",
                "format": "int32"
              },
              "release": {
                "type": "integer",
                "format": "int32",
                "writeOnly": true
              },
              "andIncrement": {
                "type": "integer",
                "format": "int32"
              },
              "andDecrement": {
                "type": "integer",
                "format": "int32"
              },
              "plain": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "limitsRetrievalService": {
            "$ref": "#/components/schemas/ILimitsRetrievalService"
          },
          "executorService": {
            "type": "object",
            "properties": {
              "terminated": {
                "type": "boolean"
              },
              "shutdown": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "AsOfDateDimensionDTO": {
        "type": "object",
        "properties": {
          "asOfDateDimensionName": {
            "type": "string"
          },
          "asOfDateHierarchyName": {
            "type": "string"
          },
          "asOfDateLevelName": {
            "type": "string"
          }
        }
      },
      "CubeDimensionDTO": {
        "type": "object",
        "properties": {
          "asOfDate": {
            "$ref": "#/components/schemas/AsOfDateDimensionDTO"
          }
        }
      },
      "LimitStructureTemplate": {
        "type": "object",
        "properties": {
          "templateName": {
            "type": "string"
          },
          "serverName": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "kpiType": {
            "type": "string",
            "enum": [
              "Greater Than",
              "Less Than"
            ]
          },
          "pollingFrequency": {
            "type": "string",
            "enum": [
              "EOD",
              "INTRADAY"
            ]
          },
          "measureName": {
            "type": "string"
          },
          "absoluteValueIndicator": {
            "type": "boolean"
          },
          "warningThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "exceptionWorkflow": {
            "type": "string"
          },
          "limitChangesWorkflow": {
            "type": "string"
          },
          "cubeName": {
            "type": "string"
          },
          "utilizationDashboardId": {
            "type": "string"
          },
          "scopeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LimitWorkflowStatusProperties": {
        "type": "object",
        "properties": {
          "evaluable": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inactive": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "kpiVisible": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pending": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LimitsAsOfDateDimensionDTO": {
        "type": "object",
        "properties": {
          "*": {
            "$ref": "#/components/schemas/CubeDimensionDTO"
          }
        }
      },
      "LimitsServerSettingsDTO": {
        "type": "object",
        "properties": {
          "storeEvaluationPasses": {
            "type": "boolean"
          },
          "workflowConfiguration": {
            "$ref": "#/components/schemas/LimitsWorkflowConfigurationProperties"
          },
          "structureTemplates": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LimitStructureTemplate"
            }
          },
          "asOfDateDimensions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LimitsAsOfDateDimensionDTO"
            }
          },
          "limitActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LimitActionDTO"
            }
          },
          "maxFileUploadSize": {
            "type": "integer",
            "format": "int64"
          },
          "maxRequestSize": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "LimitsWorkflowConfigurationProperties": {
        "type": "object",
        "properties": {
          "limitWorkflows": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LimitsWorkflowConfigurationProperty"
            }
          },
          "exceptionWorkflows": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LimitsWorkflowConfigurationProperty"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "workflowStatusFetchedWithLimit": {
            "type": "boolean"
          },
          "fileStoragePath": {
            "type": "string"
          },
          "fileAttachmentsAreReadOnly": {
            "type": "boolean"
          },
          "allowedFileUploadExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enableBulkActivitiTransactions": {
            "type": "boolean"
          },
          "limitWorkflowActionStatuses": {
            "$ref": "#/components/schemas/LimitWorkflowStatusProperties"
          }
        }
      },
      "LimitsWorkflowConfigurationProperty": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "participants": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "KpiPermissionsDTO": {
        "type": "object",
        "properties": {
          "kpiName": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LimitWorkflowStateDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "workflowActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowTaskActionDTO"
            }
          }
        }
      },
      "LimitsExportDTO": {
        "type": "object",
        "properties": {
          "limitStructures": {
            "type": "string"
          },
          "limits": {
            "type": "string"
          }
        }
      },
      "JsonBranchDescription": {
        "type": "object",
        "properties": {
          "latestEpoch": {
            "type": "integer",
            "format": "int64"
          },
          "permissions": {
            "$ref": "#/components/schemas/JsonBranchPermissions"
          }
        }
      },
      "JsonDatabaseDiscovery": {
        "type": "object",
        "properties": {
          "branches": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonBranchDescription"
            }
          },
          "tables": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonTableDescription"
            }
          },
          "joins": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/JsonDatabaseJoin"
              }
            }
          },
          "separator": {
            "type": "string"
          }
        }
      },
      "JsonDatabaseFieldDescription": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "defaultValue": {
            "type": "object"
          },
          "readOnly": {
            "type": "boolean"
          },
          "hasParser": {
            "type": "boolean"
          }
        }
      },
      "JsonDatabaseJoin": {
        "type": "object",
        "properties": {
          "targetTable": {
            "type": "string"
          },
          "fieldMappings": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "JsonTableDescription": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonDatabaseFieldDescription"
            }
          },
          "keyFields": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "canInsert": {
            "type": "boolean"
          },
          "canEdit": {
            "type": "boolean"
          },
          "canDelete": {
            "type": "boolean"
          }
        }
      },
      "ContextValueDescription": {
        "type": "object",
        "properties": {
          "contextValueKey": {
            "type": "string"
          },
          "contextValueName": {
            "type": "string"
          },
          "validationRegex": {
            "type": "string"
          },
          "availableValuesIfDiscrete": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "currentValue": {
            "type": "string"
          },
          "minValue": {
            "type": "number",
            "format": "double"
          },
          "maxValue": {
            "type": "number",
            "format": "double"
          },
          "increments": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "boolean": {
            "type": "boolean"
          },
          "range": {
            "type": "boolean"
          },
          "discrete": {
            "type": "boolean"
          }
        }
      },
      "CatalogDiscovery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "cubes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CubeDiscovery"
            }
          }
        }
      },
      "ContextValueDiscovery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "CubeDiscovery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          },
          "measures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasureDiscovery"
            }
          },
          "dimensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DimensionDiscovery"
            }
          },
          "kpis": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KpiDiscovery"
            }
          },
          "sets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetDiscovery"
            }
          },
          "defaultMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DefaultMemberDiscovery"
            }
          },
          "contextValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonContextValue"
            }
          },
          "measureGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasureGroupDiscovery"
            }
          }
        }
      },
      "DefaultMemberDiscovery": {
        "type": "object",
        "properties": {
          "dimension": {
            "type": "string"
          },
          "hierarchy": {
            "type": "string"
          },
          "path": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "captionPath": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "caption": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DimensionDiscovery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "defaultHierarchy": {
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          },
          "measureGroups": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hierarchies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HierarchyDiscovery"
            }
          }
        }
      },
      "HierarchyDiscovery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "folder": {
            "type": "string"
          },
          "slicing": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean"
          },
          "virtual": {
            "type": "boolean"
          },
          "levels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LevelDiscovery"
            }
          }
        }
      },
      "JsonContextValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "JsonDiscovery": {
        "type": "object",
        "properties": {
          "catalogs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogDiscovery"
            }
          },
          "contextValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContextValueDiscovery"
            }
          }
        }
      },
      "KpiDiscovery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "measureGroup": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "goal": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "trend": {
            "type": "string"
          },
          "statusPresenter": {
            "type": "string"
          },
          "trendPresenter": {
            "type": "string"
          },
          "folder": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          },
          "weight": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "expiry": {
            "type": "string"
          }
        }
      },
      "LevelDiscovery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "MeasureDiscovery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "formatString": {
            "type": "string"
          },
          "folder": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "expression": {
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          },
          "measureGroup": {
            "type": "string"
          }
        }
      },
      "MeasureGroupDiscovery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "SetDiscovery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "expression": {
            "type": "string"
          },
          "folder": {
            "type": "string"
          }
        }
      },
      "JsonDefinitionsPermissions": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "hreflang": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "deprecation": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          }
        }
      }
    }
  }
}